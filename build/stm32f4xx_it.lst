ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB235:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** #include "bsp_adc.h"
  26:Core/Src/stm32f4xx_it.c **** #include "bsp_uart.h"
  27:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32f4xx_it.c **** 
  29:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Core/Src/stm32f4xx_it.c **** 
  34:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32f4xx_it.c **** 
  39:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32f4xx_it.c **** 
  44:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32f4xx_it.c **** 
  49:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32f4xx_it.c **** 
  54:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32f4xx_it.c **** 
  59:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  63:Core/Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi1;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  65:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  66:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  67:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  68:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  69:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  70:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim10;
  71:Core/Src/stm32f4xx_it.c **** 
  72:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  73:Core/Src/stm32f4xx_it.c **** 
  74:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  75:Core/Src/stm32f4xx_it.c **** 
  76:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  77:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  78:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  79:Core/Src/stm32f4xx_it.c **** /**
  80:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  81:Core/Src/stm32f4xx_it.c ****   */
  82:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  83:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 83 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 3


  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  87:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  88:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 88 3 discriminator 1 view .LVU1
  89:Core/Src/stm32f4xx_it.c ****   {
  90:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 90 3 discriminator 1 view .LVU2
  88:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 88 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE235:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB236:
  91:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  92:Core/Src/stm32f4xx_it.c **** }
  93:Core/Src/stm32f4xx_it.c **** 
  94:Core/Src/stm32f4xx_it.c **** /**
  95:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  96:Core/Src/stm32f4xx_it.c ****   */
  97:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  98:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 98 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  99:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c **** 
 101:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 102 3 discriminator 1 view .LVU5
 103:Core/Src/stm32f4xx_it.c ****   {
 104:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 105:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 106 3 discriminator 1 view .LVU6
 102:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 102 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE236:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 4


  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB237:
 107:Core/Src/stm32f4xx_it.c **** }
 108:Core/Src/stm32f4xx_it.c **** 
 109:Core/Src/stm32f4xx_it.c **** /**
 110:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 111:Core/Src/stm32f4xx_it.c ****   */
 112:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 113:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 113 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 114:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c **** 
 116:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 117 3 discriminator 1 view .LVU9
 118:Core/Src/stm32f4xx_it.c ****   {
 119:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 120:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 121 3 discriminator 1 view .LVU10
 117:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 117 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE237:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB238:
 122:Core/Src/stm32f4xx_it.c **** }
 123:Core/Src/stm32f4xx_it.c **** 
 124:Core/Src/stm32f4xx_it.c **** /**
 125:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 126:Core/Src/stm32f4xx_it.c ****   */
 127:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 128:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 128 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 5


 129:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 132 3 discriminator 1 view .LVU13
 133:Core/Src/stm32f4xx_it.c ****   {
 134:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 135:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 136 3 discriminator 1 view .LVU14
 132:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 132 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE238:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB239:
 137:Core/Src/stm32f4xx_it.c **** }
 138:Core/Src/stm32f4xx_it.c **** 
 139:Core/Src/stm32f4xx_it.c **** /**
 140:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 141:Core/Src/stm32f4xx_it.c ****   */
 142:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 143:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 143 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 144:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c **** 
 146:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 147 3 discriminator 1 view .LVU17
 148:Core/Src/stm32f4xx_it.c ****   {
 149:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 150:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 151:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 151 3 discriminator 1 view .LVU18
 147:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 147 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE239:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 6


 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB240:
 152:Core/Src/stm32f4xx_it.c **** }
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c **** /**
 155:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32f4xx_it.c ****   */
 157:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 158 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 165 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE240:
 154              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 155              		.align	1
 156              		.global	DMA1_Stream5_IRQHandler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DMA1_Stream5_IRQHandler:
 162              	.LFB241:
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 168:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 169:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 170:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 171:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 172:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 173:Core/Src/stm32f4xx_it.c **** 
 174:Core/Src/stm32f4xx_it.c **** /**
 175:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 176:Core/Src/stm32f4xx_it.c ****   */
 177:Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 178:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 178 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 7


 180:Core/Src/stm32f4xx_it.c **** 
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 182:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 172              		.loc 1 182 3 view .LVU23
 173 0002 0248     		ldr	r0, .L14
 174 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 175              	.LVL0:
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 186:Core/Src/stm32f4xx_it.c **** }
 176              		.loc 1 186 1 is_stmt 0 view .LVU24
 177 0008 08BD     		pop	{r3, pc}
 178              	.L15:
 179 000a 00BF     		.align	2
 180              	.L14:
 181 000c 00000000 		.word	hdma_usart2_rx
 182              		.cfi_endproc
 183              	.LFE241:
 185              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 186              		.align	1
 187              		.global	DMA1_Stream6_IRQHandler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	DMA1_Stream6_IRQHandler:
 193              	.LFB242:
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c **** /**
 189:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 190:Core/Src/stm32f4xx_it.c ****   */
 191:Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 192:Core/Src/stm32f4xx_it.c **** {
 194              		.loc 1 192 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 08B5     		push	{r3, lr}
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 196:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 203              		.loc 1 196 3 view .LVU26
 204 0002 0248     		ldr	r0, .L18
 205 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 206              	.LVL1:
 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 200:Core/Src/stm32f4xx_it.c **** }
 207              		.loc 1 200 1 is_stmt 0 view .LVU27
 208 0008 08BD     		pop	{r3, pc}
 209              	.L19:
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 8


 210 000a 00BF     		.align	2
 211              	.L18:
 212 000c 00000000 		.word	hdma_usart2_tx
 213              		.cfi_endproc
 214              	.LFE242:
 216              		.section	.text.ADC_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	ADC_IRQHandler
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	ADC_IRQHandler:
 224              	.LFB243:
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c **** /**
 203:Core/Src/stm32f4xx_it.c ****   * @brief This function handles ADC1, ADC2 and ADC3 global interrupts.
 204:Core/Src/stm32f4xx_it.c ****   */
 205:Core/Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 206:Core/Src/stm32f4xx_it.c **** {
 225              		.loc 1 206 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI2:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 207:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 210:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 234              		.loc 1 210 3 view .LVU29
 235 0002 0248     		ldr	r0, .L22
 236 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 237              	.LVL2:
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 214:Core/Src/stm32f4xx_it.c **** }
 238              		.loc 1 214 1 is_stmt 0 view .LVU30
 239 0008 08BD     		pop	{r3, pc}
 240              	.L23:
 241 000a 00BF     		.align	2
 242              	.L22:
 243 000c 00000000 		.word	hadc1
 244              		.cfi_endproc
 245              	.LFE243:
 247              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	TIM1_UP_TIM10_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	TIM1_UP_TIM10_IRQHandler:
 255              	.LFB244:
 215:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 9


 216:Core/Src/stm32f4xx_it.c **** /**
 217:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 218:Core/Src/stm32f4xx_it.c ****   */
 219:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 220:Core/Src/stm32f4xx_it.c **** {
 256              		.loc 1 220 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI3:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 224:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim10);
 265              		.loc 1 224 3 view .LVU32
 266 0002 0248     		ldr	r0, .L26
 267 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 268              	.LVL3:
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 228:Core/Src/stm32f4xx_it.c **** }
 269              		.loc 1 228 1 is_stmt 0 view .LVU33
 270 0008 08BD     		pop	{r3, pc}
 271              	.L27:
 272 000a 00BF     		.align	2
 273              	.L26:
 274 000c 00000000 		.word	htim10
 275              		.cfi_endproc
 276              	.LFE244:
 278              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 279              		.align	1
 280              		.global	SPI1_IRQHandler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	SPI1_IRQHandler:
 286              	.LFB245:
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c **** /**
 231:Core/Src/stm32f4xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 232:Core/Src/stm32f4xx_it.c ****   */
 233:Core/Src/stm32f4xx_it.c **** void SPI1_IRQHandler(void)
 234:Core/Src/stm32f4xx_it.c **** {
 287              		.loc 1 234 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 10


 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 238:Core/Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 296              		.loc 1 238 3 view .LVU35
 297 0002 0248     		ldr	r0, .L30
 298 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 299              	.LVL4:
 239:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 242:Core/Src/stm32f4xx_it.c **** }
 300              		.loc 1 242 1 is_stmt 0 view .LVU36
 301 0008 08BD     		pop	{r3, pc}
 302              	.L31:
 303 000a 00BF     		.align	2
 304              	.L30:
 305 000c 00000000 		.word	hspi1
 306              		.cfi_endproc
 307              	.LFE245:
 309              		.section	.text.USART1_IRQHandler,"ax",%progbits
 310              		.align	1
 311              		.global	USART1_IRQHandler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	USART1_IRQHandler:
 317              	.LFB246:
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c **** /**
 245:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 246:Core/Src/stm32f4xx_it.c ****   */
 247:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 248:Core/Src/stm32f4xx_it.c **** {
 318              		.loc 1 248 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 10B5     		push	{r4, lr}
 323              	.LCFI5:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 250:Core/Src/stm32f4xx_it.c ****   BSP_UART_IRQHandler(&huart1);
 327              		.loc 1 250 3 view .LVU38
 328 0002 044C     		ldr	r4, .L34
 329 0004 2046     		mov	r0, r4
 330 0006 FFF7FEFF 		bl	BSP_UART_IRQHandler
 331              	.LVL5:
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 252:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 332              		.loc 1 252 3 view .LVU39
 333 000a 2046     		mov	r0, r4
 334 000c FFF7FEFF 		bl	HAL_UART_IRQHandler
 335              	.LVL6:
 253:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 11


 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 256:Core/Src/stm32f4xx_it.c **** }
 336              		.loc 1 256 1 is_stmt 0 view .LVU40
 337 0010 10BD     		pop	{r4, pc}
 338              	.L35:
 339 0012 00BF     		.align	2
 340              	.L34:
 341 0014 00000000 		.word	huart1
 342              		.cfi_endproc
 343              	.LFE246:
 345              		.section	.text.USART2_IRQHandler,"ax",%progbits
 346              		.align	1
 347              		.global	USART2_IRQHandler
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	USART2_IRQHandler:
 353              	.LFB247:
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c **** /**
 259:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 260:Core/Src/stm32f4xx_it.c ****   */
 261:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 262:Core/Src/stm32f4xx_it.c **** {
 354              		.loc 1 262 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 10B5     		push	{r4, lr}
 359              	.LCFI6:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 4, -8
 362              		.cfi_offset 14, -4
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 264:Core/Src/stm32f4xx_it.c ****   BSP_UART_IRQHandler(&huart2);
 363              		.loc 1 264 3 view .LVU42
 364 0002 044C     		ldr	r4, .L38
 365 0004 2046     		mov	r0, r4
 366 0006 FFF7FEFF 		bl	BSP_UART_IRQHandler
 367              	.LVL7:
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 266:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 368              		.loc 1 266 3 view .LVU43
 369 000a 2046     		mov	r0, r4
 370 000c FFF7FEFF 		bl	HAL_UART_IRQHandler
 371              	.LVL8:
 267:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 270:Core/Src/stm32f4xx_it.c **** }
 372              		.loc 1 270 1 is_stmt 0 view .LVU44
 373 0010 10BD     		pop	{r4, pc}
 374              	.L39:
 375 0012 00BF     		.align	2
 376              	.L38:
 377 0014 00000000 		.word	huart2
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 12


 378              		.cfi_endproc
 379              	.LFE247:
 381              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 382              		.align	1
 383              		.global	DMA2_Stream0_IRQHandler
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	DMA2_Stream0_IRQHandler:
 389              	.LFB248:
 271:Core/Src/stm32f4xx_it.c **** 
 272:Core/Src/stm32f4xx_it.c **** /**
 273:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 274:Core/Src/stm32f4xx_it.c ****   */
 275:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 276:Core/Src/stm32f4xx_it.c **** {
 390              		.loc 1 276 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI7:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 280:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 399              		.loc 1 280 3 view .LVU46
 400 0002 0248     		ldr	r0, .L42
 401 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 402              	.LVL9:
 281:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 282:Core/Src/stm32f4xx_it.c **** 
 283:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 284:Core/Src/stm32f4xx_it.c **** }
 403              		.loc 1 284 1 is_stmt 0 view .LVU47
 404 0008 08BD     		pop	{r3, pc}
 405              	.L43:
 406 000a 00BF     		.align	2
 407              	.L42:
 408 000c 00000000 		.word	hdma_spi1_rx
 409              		.cfi_endproc
 410              	.LFE248:
 412              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 413              		.align	1
 414              		.global	DMA2_Stream2_IRQHandler
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 419              	DMA2_Stream2_IRQHandler:
 420              	.LFB249:
 285:Core/Src/stm32f4xx_it.c **** 
 286:Core/Src/stm32f4xx_it.c **** /**
 287:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 288:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 13


 289:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 290:Core/Src/stm32f4xx_it.c **** {
 421              		.loc 1 290 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 08B5     		push	{r3, lr}
 426              	.LCFI8:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 3, -8
 429              		.cfi_offset 14, -4
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 294:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 430              		.loc 1 294 3 view .LVU49
 431 0002 0248     		ldr	r0, .L46
 432 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 433              	.LVL10:
 295:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 296:Core/Src/stm32f4xx_it.c **** 
 297:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 298:Core/Src/stm32f4xx_it.c **** }
 434              		.loc 1 298 1 is_stmt 0 view .LVU50
 435 0008 08BD     		pop	{r3, pc}
 436              	.L47:
 437 000a 00BF     		.align	2
 438              	.L46:
 439 000c 00000000 		.word	hdma_usart1_rx
 440              		.cfi_endproc
 441              	.LFE249:
 443              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 444              		.align	1
 445              		.global	DMA2_Stream3_IRQHandler
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 450              	DMA2_Stream3_IRQHandler:
 451              	.LFB250:
 299:Core/Src/stm32f4xx_it.c **** 
 300:Core/Src/stm32f4xx_it.c **** /**
 301:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream3 global interrupt.
 302:Core/Src/stm32f4xx_it.c ****   */
 303:Core/Src/stm32f4xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 304:Core/Src/stm32f4xx_it.c **** {
 452              		.loc 1 304 1 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI9:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 3, -8
 460              		.cfi_offset 14, -4
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 14


 308:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 461              		.loc 1 308 3 view .LVU52
 462 0002 0248     		ldr	r0, .L50
 463 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 464              	.LVL11:
 309:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */
 310:Core/Src/stm32f4xx_it.c **** 
 311:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 1 */
 312:Core/Src/stm32f4xx_it.c **** }
 465              		.loc 1 312 1 is_stmt 0 view .LVU53
 466 0008 08BD     		pop	{r3, pc}
 467              	.L51:
 468 000a 00BF     		.align	2
 469              	.L50:
 470 000c 00000000 		.word	hdma_spi1_tx
 471              		.cfi_endproc
 472              	.LFE250:
 474              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 475              		.align	1
 476              		.global	DMA2_Stream7_IRQHandler
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	DMA2_Stream7_IRQHandler:
 482              	.LFB251:
 313:Core/Src/stm32f4xx_it.c **** 
 314:Core/Src/stm32f4xx_it.c **** /**
 315:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 316:Core/Src/stm32f4xx_it.c ****   */
 317:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 318:Core/Src/stm32f4xx_it.c **** {
 483              		.loc 1 318 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 08B5     		push	{r3, lr}
 488              	.LCFI10:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 3, -8
 491              		.cfi_offset 14, -4
 319:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 320:Core/Src/stm32f4xx_it.c **** 
 321:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 322:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 492              		.loc 1 322 3 view .LVU55
 493 0002 0248     		ldr	r0, .L54
 494 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 495              	.LVL12:
 323:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 324:Core/Src/stm32f4xx_it.c **** 
 325:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 326:Core/Src/stm32f4xx_it.c **** }
 496              		.loc 1 326 1 is_stmt 0 view .LVU56
 497 0008 08BD     		pop	{r3, pc}
 498              	.L55:
 499 000a 00BF     		.align	2
 500              	.L54:
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 15


 501 000c 00000000 		.word	hdma_usart1_tx
 502              		.cfi_endproc
 503              	.LFE251:
 505              		.text
 506              	.Letext0:
 507              		.file 2 "d:\\program files\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machin
 508              		.file 3 "d:\\program files\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_
 509              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 510              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 511              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 512              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 513              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 514              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 515              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 516              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 517              		.file 12 "Core/Inc/usart.h"
 518              		.file 13 "bsp/Inc/bsp_uart.h"
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:20     .text.NMI_Handler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:136    .text.DebugMon_Handler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:142    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:155    .text.DMA1_Stream5_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:161    .text.DMA1_Stream5_IRQHandler:00000000 DMA1_Stream5_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:181    .text.DMA1_Stream5_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:186    .text.DMA1_Stream6_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:192    .text.DMA1_Stream6_IRQHandler:00000000 DMA1_Stream6_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:212    .text.DMA1_Stream6_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:217    .text.ADC_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:223    .text.ADC_IRQHandler:00000000 ADC_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:243    .text.ADC_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:248    .text.TIM1_UP_TIM10_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:254    .text.TIM1_UP_TIM10_IRQHandler:00000000 TIM1_UP_TIM10_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:274    .text.TIM1_UP_TIM10_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:279    .text.SPI1_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:285    .text.SPI1_IRQHandler:00000000 SPI1_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:305    .text.SPI1_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:310    .text.USART1_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:316    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:341    .text.USART1_IRQHandler:00000014 $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:346    .text.USART2_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:352    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:377    .text.USART2_IRQHandler:00000014 $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:382    .text.DMA2_Stream0_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:388    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:408    .text.DMA2_Stream0_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:413    .text.DMA2_Stream2_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:419    .text.DMA2_Stream2_IRQHandler:00000000 DMA2_Stream2_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:439    .text.DMA2_Stream2_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:444    .text.DMA2_Stream3_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:450    .text.DMA2_Stream3_IRQHandler:00000000 DMA2_Stream3_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:470    .text.DMA2_Stream3_IRQHandler:0000000c $d
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:475    .text.DMA2_Stream7_IRQHandler:00000000 $t
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:481    .text.DMA2_Stream7_IRQHandler:00000000 DMA2_Stream7_IRQHandler
C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s:501    .text.DMA2_Stream7_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart2_rx
hdma_usart2_tx
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
htim10
HAL_SPI_IRQHandler
ARM GAS  C:\Users\YKESH~1\AppData\Local\Temp\ccMVHPvx.s 			page 17


hspi1
BSP_UART_IRQHandler
HAL_UART_IRQHandler
huart1
huart2
hdma_spi1_rx
hdma_usart1_rx
hdma_spi1_tx
hdma_usart1_tx
